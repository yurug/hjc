data questions_target =
| ForUser (string)

data list ('a) =
| Nil
| Cons ('a, list ('a))

data template ('a) =
| TAtom (string, template ('a))
| TCode ('a, template ('a))
| TNil

data boolean =
| True
| False

data text = {
  bold   : boolean;
  italic : boolean;
  value  : string
}

data statement =
| Text (template (text))

data context =
| QCM (list (statement), list (int))

data questions =
| Question (template (string), template (string), template (statement), template (context))
| Section (template (string), template (questions))

def section title questions = Section title questions

def question id title statement context = Question id title statement context

def text t = Text t

def choices t =
  t ? {
  | TAtom s t => Cons (Text (TAtom s TNil)) (choices t)
  | TCode s t => Cons s (choices t)
  | TNil => Nil
  }

def expected_choices t =
  t ? {
  {* We ignore trailing strings, since we are expecting a list of
     integers. *}
  | TAtom s t => expected_choices t
  | TCode s t => Cons s (expected_choices t)
  | TNil => Nil
  }
